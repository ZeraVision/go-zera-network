// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.12.4
// source: zera_api.proto

package protobuf

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CONFIRMATION_LEVEL int32

const (
	CONFIRMATION_LEVEL_PROCESSED CONFIRMATION_LEVEL = 0
	CONFIRMATION_LEVEL_FINALIZED CONFIRMATION_LEVEL = 1
	CONFIRMATION_LEVEL_CONFIRMED CONFIRMATION_LEVEL = 2
)

// Enum value maps for CONFIRMATION_LEVEL.
var (
	CONFIRMATION_LEVEL_name = map[int32]string{
		0: "PROCESSED",
		1: "FINALIZED",
		2: "CONFIRMED",
	}
	CONFIRMATION_LEVEL_value = map[string]int32{
		"PROCESSED": 0,
		"FINALIZED": 1,
		"CONFIRMED": 2,
	}
)

func (x CONFIRMATION_LEVEL) Enum() *CONFIRMATION_LEVEL {
	p := new(CONFIRMATION_LEVEL)
	*p = x
	return p
}

func (x CONFIRMATION_LEVEL) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CONFIRMATION_LEVEL) Descriptor() protoreflect.EnumDescriptor {
	return file_zera_api_proto_enumTypes[0].Descriptor()
}

func (CONFIRMATION_LEVEL) Type() protoreflect.EnumType {
	return &file_zera_api_proto_enumTypes[0]
}

func (x CONFIRMATION_LEVEL) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CONFIRMATION_LEVEL.Descriptor instead.
func (CONFIRMATION_LEVEL) EnumDescriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{0}
}

type DATABASE_TYPE int32

const (
	DATABASE_TYPE_UNKNOWN              DATABASE_TYPE = 0
	DATABASE_TYPE_CONTRACTS            DATABASE_TYPE = 1
	DATABASE_TYPE_HASH_INDEX           DATABASE_TYPE = 2
	DATABASE_TYPE_CONTRACT_SUPPLY      DATABASE_TYPE = 3
	DATABASE_TYPE_SMART_CONTRACTS      DATABASE_TYPE = 4
	DATABASE_TYPE_VALIDATORS           DATABASE_TYPE = 5
	DATABASE_TYPE_BLOCKS               DATABASE_TYPE = 6
	DATABASE_TYPE_HEADERS              DATABASE_TYPE = 7
	DATABASE_TYPE_TRANSACTIONS         DATABASE_TYPE = 8
	DATABASE_TYPE_CONTRACT_ITEMS       DATABASE_TYPE = 9
	DATABASE_TYPE_VALIDATOR_UNBONDING  DATABASE_TYPE = 10
	DATABASE_TYPE_PROPOSAL_LEDGER      DATABASE_TYPE = 11
	DATABASE_TYPE_PROPOSALS            DATABASE_TYPE = 12
	DATABASE_TYPE_CURRENCY_EQUIVALENTS DATABASE_TYPE = 13
	DATABASE_TYPE_EXPENSE_RATIO        DATABASE_TYPE = 14
	DATABASE_TYPE_ATTESTATION          DATABASE_TYPE = 15
	DATABASE_TYPE_CONFIRMED_BLOCKS     DATABASE_TYPE = 16
)

// Enum value maps for DATABASE_TYPE.
var (
	DATABASE_TYPE_name = map[int32]string{
		0:  "UNKNOWN",
		1:  "CONTRACTS",
		2:  "HASH_INDEX",
		3:  "CONTRACT_SUPPLY",
		4:  "SMART_CONTRACTS",
		5:  "VALIDATORS",
		6:  "BLOCKS",
		7:  "HEADERS",
		8:  "TRANSACTIONS",
		9:  "CONTRACT_ITEMS",
		10: "VALIDATOR_UNBONDING",
		11: "PROPOSAL_LEDGER",
		12: "PROPOSALS",
		13: "CURRENCY_EQUIVALENTS",
		14: "EXPENSE_RATIO",
		15: "ATTESTATION",
		16: "CONFIRMED_BLOCKS",
	}
	DATABASE_TYPE_value = map[string]int32{
		"UNKNOWN":              0,
		"CONTRACTS":            1,
		"HASH_INDEX":           2,
		"CONTRACT_SUPPLY":      3,
		"SMART_CONTRACTS":      4,
		"VALIDATORS":           5,
		"BLOCKS":               6,
		"HEADERS":              7,
		"TRANSACTIONS":         8,
		"CONTRACT_ITEMS":       9,
		"VALIDATOR_UNBONDING":  10,
		"PROPOSAL_LEDGER":      11,
		"PROPOSALS":            12,
		"CURRENCY_EQUIVALENTS": 13,
		"EXPENSE_RATIO":        14,
		"ATTESTATION":          15,
		"CONFIRMED_BLOCKS":     16,
	}
)

func (x DATABASE_TYPE) Enum() *DATABASE_TYPE {
	p := new(DATABASE_TYPE)
	*p = x
	return p
}

func (x DATABASE_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DATABASE_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_zera_api_proto_enumTypes[1].Descriptor()
}

func (DATABASE_TYPE) Type() protoreflect.EnumType {
	return &file_zera_api_proto_enumTypes[1]
}

func (x DATABASE_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DATABASE_TYPE.Descriptor instead.
func (DATABASE_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{1}
}

type PROPOSAL_TYPE int32

const (
	PROPOSAL_TYPE_ALL_PROPOSALS  PROPOSAL_TYPE = 0
	PROPOSAL_TYPE_ALL_LEDGERS    PROPOSAL_TYPE = 1
	PROPOSAL_TYPE_PROPOSAL_BY_ID PROPOSAL_TYPE = 2
	PROPOSAL_TYPE_LEDGER_BY_ID   PROPOSAL_TYPE = 3
)

// Enum value maps for PROPOSAL_TYPE.
var (
	PROPOSAL_TYPE_name = map[int32]string{
		0: "ALL_PROPOSALS",
		1: "ALL_LEDGERS",
		2: "PROPOSAL_BY_ID",
		3: "LEDGER_BY_ID",
	}
	PROPOSAL_TYPE_value = map[string]int32{
		"ALL_PROPOSALS":  0,
		"ALL_LEDGERS":    1,
		"PROPOSAL_BY_ID": 2,
		"LEDGER_BY_ID":   3,
	}
)

func (x PROPOSAL_TYPE) Enum() *PROPOSAL_TYPE {
	p := new(PROPOSAL_TYPE)
	*p = x
	return p
}

func (x PROPOSAL_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PROPOSAL_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_zera_api_proto_enumTypes[2].Descriptor()
}

func (PROPOSAL_TYPE) Type() protoreflect.EnumType {
	return &file_zera_api_proto_enumTypes[2]
}

func (x PROPOSAL_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PROPOSAL_TYPE.Descriptor instead.
func (PROPOSAL_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{2}
}

// PROPOSAL LEDGER
type ProposalLedgerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DATABASE_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=zera_api.DATABASE_TYPE" json:"type,omitempty"`
	Key  string        `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"` //proposal_id or ledger_id
}

func (x *ProposalLedgerRequest) Reset() {
	*x = ProposalLedgerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalLedgerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalLedgerRequest) ProtoMessage() {}

func (x *ProposalLedgerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalLedgerRequest.ProtoReflect.Descriptor instead.
func (*ProposalLedgerRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{0}
}

func (x *ProposalLedgerRequest) GetType() DATABASE_TYPE {
	if x != nil {
		return x.Type
	}
	return DATABASE_TYPE_UNKNOWN
}

func (x *ProposalLedgerRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ProposalLedgerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedgerKeys     []string `protobuf:"bytes,1,rep,name=ledger_keys,json=ledgerKeys,proto3" json:"ledger_keys,omitempty"`             //proposal_id or ledger_id
	LedgerValues   []string `protobuf:"bytes,2,rep,name=ledger_values,json=ledgerValues,proto3" json:"ledger_values,omitempty"`       //string of proposal ledger
	ProposalKeys   []string `protobuf:"bytes,3,rep,name=proposal_keys,json=proposalKeys,proto3" json:"proposal_keys,omitempty"`       //proposal_id or ledger_id
	ProposalValues []string `protobuf:"bytes,4,rep,name=proposal_values,json=proposalValues,proto3" json:"proposal_values,omitempty"` //string of proposal ledger
	WalletsKeys    []string `protobuf:"bytes,5,rep,name=wallets_keys,json=walletsKeys,proto3" json:"wallets_keys,omitempty"`          //proposal_id or ledger_id
	WalletsValues  []string `protobuf:"bytes,6,rep,name=wallets_values,json=walletsValues,proto3" json:"wallets_values,omitempty"`
	TempKeys       []string `protobuf:"bytes,7,rep,name=temp_keys,json=tempKeys,proto3" json:"temp_keys,omitempty"`
	TempValues     []string `protobuf:"bytes,8,rep,name=temp_values,json=tempValues,proto3" json:"temp_values,omitempty"`
	VotedKeys      []string `protobuf:"bytes,9,rep,name=voted_keys,json=votedKeys,proto3" json:"voted_keys,omitempty"`
	VotedValues    []string `protobuf:"bytes,10,rep,name=voted_values,json=votedValues,proto3" json:"voted_values,omitempty"`
}

func (x *ProposalLedgerResponse) Reset() {
	*x = ProposalLedgerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalLedgerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalLedgerResponse) ProtoMessage() {}

func (x *ProposalLedgerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalLedgerResponse.ProtoReflect.Descriptor instead.
func (*ProposalLedgerResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{1}
}

func (x *ProposalLedgerResponse) GetLedgerKeys() []string {
	if x != nil {
		return x.LedgerKeys
	}
	return nil
}

func (x *ProposalLedgerResponse) GetLedgerValues() []string {
	if x != nil {
		return x.LedgerValues
	}
	return nil
}

func (x *ProposalLedgerResponse) GetProposalKeys() []string {
	if x != nil {
		return x.ProposalKeys
	}
	return nil
}

func (x *ProposalLedgerResponse) GetProposalValues() []string {
	if x != nil {
		return x.ProposalValues
	}
	return nil
}

func (x *ProposalLedgerResponse) GetWalletsKeys() []string {
	if x != nil {
		return x.WalletsKeys
	}
	return nil
}

func (x *ProposalLedgerResponse) GetWalletsValues() []string {
	if x != nil {
		return x.WalletsValues
	}
	return nil
}

func (x *ProposalLedgerResponse) GetTempKeys() []string {
	if x != nil {
		return x.TempKeys
	}
	return nil
}

func (x *ProposalLedgerResponse) GetTempValues() []string {
	if x != nil {
		return x.TempValues
	}
	return nil
}

func (x *ProposalLedgerResponse) GetVotedKeys() []string {
	if x != nil {
		return x.VotedKeys
	}
	return nil
}

func (x *ProposalLedgerResponse) GetVotedValues() []string {
	if x != nil {
		return x.VotedValues
	}
	return nil
}

// Block
type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//
	//	*BlockRequest_BlockHeight
	//	*BlockRequest_BlockHash
	Payload isBlockRequest_Payload `protobuf_oneof:"payload"`
	Encoded bool                   `protobuf:"varint,3,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{2}
}

func (m *BlockRequest) GetPayload() isBlockRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *BlockRequest) GetBlockHeight() uint64 {
	if x, ok := x.GetPayload().(*BlockRequest_BlockHeight); ok {
		return x.BlockHeight
	}
	return 0
}

func (x *BlockRequest) GetBlockHash() string {
	if x, ok := x.GetPayload().(*BlockRequest_BlockHash); ok {
		return x.BlockHash
	}
	return ""
}

func (x *BlockRequest) GetEncoded() bool {
	if x != nil {
		return x.Encoded
	}
	return false
}

type isBlockRequest_Payload interface {
	isBlockRequest_Payload()
}

type BlockRequest_BlockHeight struct {
	BlockHeight uint64 `protobuf:"varint,1,opt,name=block_height,json=blockHeight,proto3,oneof"`
}

type BlockRequest_BlockHash struct {
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3,oneof"`
}

func (*BlockRequest_BlockHeight) isBlockRequest_Payload() {}

func (*BlockRequest_BlockHash) isBlockRequest_Payload() {}

type BlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BlockResponse) Reset() {
	*x = BlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockResponse) ProtoMessage() {}

func (x *BlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockResponse.ProtoReflect.Descriptor instead.
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{3}
}

func (x *BlockResponse) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

// NONCE
type NonceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress []byte `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Encoded       bool   `protobuf:"varint,3,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *NonceRequest) Reset() {
	*x = NonceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceRequest) ProtoMessage() {}

func (x *NonceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceRequest.ProtoReflect.Descriptor instead.
func (*NonceRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{4}
}

func (x *NonceRequest) GetWalletAddress() []byte {
	if x != nil {
		return x.WalletAddress
	}
	return nil
}

func (x *NonceRequest) GetEncoded() bool {
	if x != nil {
		return x.Encoded
	}
	return false
}

type NonceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce uint64 `protobuf:"varint,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *NonceResponse) Reset() {
	*x = NonceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonceResponse) ProtoMessage() {}

func (x *NonceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonceResponse.ProtoReflect.Descriptor instead.
func (*NonceResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{5}
}

func (x *NonceResponse) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// BALANCE
type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress []byte `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ContractId    string `protobuf:"bytes,2,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Encoded       bool   `protobuf:"varint,3,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{6}
}

func (x *BalanceRequest) GetWalletAddress() []byte {
	if x != nil {
		return x.WalletAddress
	}
	return nil
}

func (x *BalanceRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *BalanceRequest) GetEncoded() bool {
	if x != nil {
		return x.Encoded
	}
	return false
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance      string `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`
	Denomination string `protobuf:"bytes,2,opt,name=denomination,proto3" json:"denomination,omitempty"`
	Rate         string `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"` //1000000000000000000 = $1.00 (1,000,000,000,000,000,000)
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{7}
}

func (x *BalanceResponse) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *BalanceResponse) GetDenomination() string {
	if x != nil {
		return x.Denomination
	}
	return ""
}

func (x *BalanceResponse) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

// CONTRACT
type ContractRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
}

func (x *ContractRequest) Reset() {
	*x = ContractRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractRequest) ProtoMessage() {}

func (x *ContractRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractRequest.ProtoReflect.Descriptor instead.
func (*ContractRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{8}
}

func (x *ContractRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type ContractResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contract  *InstrumentContract  `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	PublicKey *PublicKey           `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature []byte               `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *ContractResponse) Reset() {
	*x = ContractResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractResponse) ProtoMessage() {}

func (x *ContractResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractResponse.ProtoReflect.Descriptor instead.
func (*ContractResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{9}
}

func (x *ContractResponse) GetContract() *InstrumentContract {
	if x != nil {
		return x.Contract
	}
	return nil
}

func (x *ContractResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ContractResponse) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ContractResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// CONTRACT FEE
type ContractFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
}

func (x *ContractFeeRequest) Reset() {
	*x = ContractFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractFeeRequest) ProtoMessage() {}

func (x *ContractFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractFeeRequest.ProtoReflect.Descriptor instead.
func (*ContractFeeRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{10}
}

func (x *ContractFeeRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type ContractFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractFeeType      CONTRACT_FEE_TYPE `protobuf:"varint,1,opt,name=contract_fee_type,json=contractFeeType,proto3,enum=zera_txn.CONTRACT_FEE_TYPE" json:"contract_fee_type,omitempty"`
	AllowedFeeInstrument []string          `protobuf:"bytes,2,rep,name=allowed_fee_instrument,json=allowedFeeInstrument,proto3" json:"allowed_fee_instrument,omitempty"`
	Fee                  string            `protobuf:"bytes,3,opt,name=fee,proto3" json:"fee,omitempty"`
}

func (x *ContractFeeResponse) Reset() {
	*x = ContractFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractFeeResponse) ProtoMessage() {}

func (x *ContractFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractFeeResponse.ProtoReflect.Descriptor instead.
func (*ContractFeeResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{11}
}

func (x *ContractFeeResponse) GetContractFeeType() CONTRACT_FEE_TYPE {
	if x != nil {
		return x.ContractFeeType
	}
	return CONTRACT_FEE_TYPE_FIXED
}

func (x *ContractFeeResponse) GetAllowedFeeInstrument() []string {
	if x != nil {
		return x.AllowedFeeInstrument
	}
	return nil
}

func (x *ContractFeeResponse) GetFee() string {
	if x != nil {
		return x.Fee
	}
	return ""
}

// BASE FEE
type BaseFeeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey *PublicKey       `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"`
	TxnType   TRANSACTION_TYPE `protobuf:"varint,2,opt,name=txn_type,json=txnType,proto3,enum=zera_txn.TRANSACTION_TYPE" json:"txn_type,omitempty"`
}

func (x *BaseFeeRequest) Reset() {
	*x = BaseFeeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFeeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFeeRequest) ProtoMessage() {}

func (x *BaseFeeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFeeRequest.ProtoReflect.Descriptor instead.
func (*BaseFeeRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{12}
}

func (x *BaseFeeRequest) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *BaseFeeRequest) GetTxnType() TRANSACTION_TYPE {
	if x != nil {
		return x.TxnType
	}
	return TRANSACTION_TYPE_UKNOWN_TYPE
}

type BaseFeeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyFee  string `protobuf:"bytes,1,opt,name=key_fee,json=keyFee,proto3" json:"key_fee,omitempty"`    //1000000000000000000 = $1.00 (1,000,000,000,000,000,000)
	ByteFee string `protobuf:"bytes,2,opt,name=byte_fee,json=byteFee,proto3" json:"byte_fee,omitempty"` //1000000000000000000 = $1.00 (1,000,000,000,000,000,000)
}

func (x *BaseFeeResponse) Reset() {
	*x = BaseFeeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseFeeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseFeeResponse) ProtoMessage() {}

func (x *BaseFeeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseFeeResponse.ProtoReflect.Descriptor instead.
func (*BaseFeeResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{13}
}

func (x *BaseFeeResponse) GetKeyFee() string {
	if x != nil {
		return x.KeyFee
	}
	return ""
}

func (x *BaseFeeResponse) GetByteFee() string {
	if x != nil {
		return x.ByteFee
	}
	return ""
}

// AUTHORIZED TOKEN
type TokenFeeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId   string        `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	Rate         string        `protobuf:"bytes,2,opt,name=rate,proto3" json:"rate,omitempty"` //1000000000000000000 = $1.00 (1,000,000,000,000,000,000)
	Authorized   bool          `protobuf:"varint,3,opt,name=authorized,proto3" json:"authorized,omitempty"`
	Denomination string        `protobuf:"bytes,4,opt,name=denomination,proto3" json:"denomination,omitempty"`
	ContractFees *ContractFees `protobuf:"bytes,5,opt,name=contract_fees,json=contractFees,proto3,oneof" json:"contract_fees,omitempty"`
}

func (x *TokenFeeInfo) Reset() {
	*x = TokenFeeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenFeeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenFeeInfo) ProtoMessage() {}

func (x *TokenFeeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenFeeInfo.ProtoReflect.Descriptor instead.
func (*TokenFeeInfo) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{14}
}

func (x *TokenFeeInfo) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *TokenFeeInfo) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *TokenFeeInfo) GetAuthorized() bool {
	if x != nil {
		return x.Authorized
	}
	return false
}

func (x *TokenFeeInfo) GetDenomination() string {
	if x != nil {
		return x.Denomination
	}
	return ""
}

func (x *TokenFeeInfo) GetContractFees() *ContractFees {
	if x != nil {
		return x.ContractFees
	}
	return nil
}

type TokenFeeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractIds []string `protobuf:"bytes,1,rep,name=contract_ids,json=contractIds,proto3" json:"contract_ids,omitempty"`
}

func (x *TokenFeeInfoRequest) Reset() {
	*x = TokenFeeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenFeeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenFeeInfoRequest) ProtoMessage() {}

func (x *TokenFeeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenFeeInfoRequest.ProtoReflect.Descriptor instead.
func (*TokenFeeInfoRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{15}
}

func (x *TokenFeeInfoRequest) GetContractIds() []string {
	if x != nil {
		return x.ContractIds
	}
	return nil
}

type TokenFeeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tokens []*TokenFeeInfo `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenFeeInfoResponse) Reset() {
	*x = TokenFeeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenFeeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenFeeInfoResponse) ProtoMessage() {}

func (x *TokenFeeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenFeeInfoResponse.ProtoReflect.Descriptor instead.
func (*TokenFeeInfoResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{16}
}

func (x *TokenFeeInfoResponse) GetTokens() []*TokenFeeInfo {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// ITEM BALANCE
type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	ItemId     string `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{17}
}

func (x *Item) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

func (x *Item) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type ItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress []byte `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	Encoded       bool   `protobuf:"varint,2,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *ItemRequest) Reset() {
	*x = ItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemRequest) ProtoMessage() {}

func (x *ItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemRequest.ProtoReflect.Descriptor instead.
func (*ItemRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{18}
}

func (x *ItemRequest) GetWalletAddress() []byte {
	if x != nil {
		return x.WalletAddress
	}
	return nil
}

func (x *ItemRequest) GetEncoded() bool {
	if x != nil {
		return x.Encoded
	}
	return false
}

type ItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ItemResponse) Reset() {
	*x = ItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemResponse) ProtoMessage() {}

func (x *ItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemResponse.ProtoReflect.Descriptor instead.
func (*ItemResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{19}
}

func (x *ItemResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

// DENOMINATION
type DenominationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractId string `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
}

func (x *DenominationRequest) Reset() {
	*x = DenominationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenominationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenominationRequest) ProtoMessage() {}

func (x *DenominationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenominationRequest.ProtoReflect.Descriptor instead.
func (*DenominationRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{20}
}

func (x *DenominationRequest) GetContractId() string {
	if x != nil {
		return x.ContractId
	}
	return ""
}

type DenominationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Denomination string `protobuf:"bytes,1,opt,name=denomination,proto3" json:"denomination,omitempty"`
}

func (x *DenominationResponse) Reset() {
	*x = DenominationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DenominationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DenominationResponse) ProtoMessage() {}

func (x *DenominationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DenominationResponse.ProtoReflect.Descriptor instead.
func (*DenominationResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{21}
}

func (x *DenominationResponse) GetDenomination() string {
	if x != nil {
		return x.Denomination
	}
	return ""
}

// DATABASE
type DatabaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DATABASE_TYPE `protobuf:"varint,1,opt,name=type,proto3,enum=zera_api.DATABASE_TYPE" json:"type,omitempty"`
	Key  string        `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DatabaseRequest) Reset() {
	*x = DatabaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseRequest) ProtoMessage() {}

func (x *DatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseRequest.ProtoReflect.Descriptor instead.
func (*DatabaseRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{22}
}

func (x *DatabaseRequest) GetType() DATABASE_TYPE {
	if x != nil {
		return x.Type
	}
	return DATABASE_TYPE_UNKNOWN
}

func (x *DatabaseRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DatabaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DatabaseResponse) Reset() {
	*x = DatabaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseResponse) ProtoMessage() {}

func (x *DatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseResponse.ProtoReflect.Descriptor instead.
func (*DatabaseResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{23}
}

func (x *DatabaseResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ActivityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmartContractId string             `protobuf:"bytes,1,opt,name=smart_contract_id,json=smartContractId,proto3" json:"smart_contract_id,omitempty"`
	Instance        uint64             `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`
	Level           CONFIRMATION_LEVEL `protobuf:"varint,3,opt,name=level,proto3,enum=zera_api.CONFIRMATION_LEVEL" json:"level,omitempty"`
	Host            string             `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port            int32              `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Subscribe       bool               `protobuf:"varint,6,opt,name=subscribe,proto3" json:"subscribe,omitempty"` //true = subscribe, false = unsubscribe
	PublicKey       *PublicKey         `protobuf:"bytes,7,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Signature       []byte             `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Nonce           uint64             `protobuf:"varint,9,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *ActivityRequest) Reset() {
	*x = ActivityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityRequest) ProtoMessage() {}

func (x *ActivityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityRequest.ProtoReflect.Descriptor instead.
func (*ActivityRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{24}
}

func (x *ActivityRequest) GetSmartContractId() string {
	if x != nil {
		return x.SmartContractId
	}
	return ""
}

func (x *ActivityRequest) GetInstance() uint64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *ActivityRequest) GetLevel() CONFIRMATION_LEVEL {
	if x != nil {
		return x.Level
	}
	return CONFIRMATION_LEVEL_PROCESSED
}

func (x *ActivityRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ActivityRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ActivityRequest) GetSubscribe() bool {
	if x != nil {
		return x.Subscribe
	}
	return false
}

func (x *ActivityRequest) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *ActivityRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *ActivityRequest) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

type SmartContractEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmartContract string               `protobuf:"bytes,1,opt,name=smart_contract,json=smartContract,proto3" json:"smart_contract,omitempty"` //
	Instance      uint64               `protobuf:"varint,2,opt,name=instance,proto3" json:"instance,omitempty"`                               //
	GasUsed       uint64               `protobuf:"varint,3,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                  //
	GasApproved   uint64               `protobuf:"varint,4,opt,name=gas_approved,json=gasApproved,proto3" json:"gas_approved,omitempty"`      //
	StorageFee    string               `protobuf:"bytes,5,opt,name=storage_fee,json=storageFee,proto3" json:"storage_fee,omitempty"`          //
	Caller        *PublicKey           `protobuf:"bytes,6,opt,name=caller,proto3" json:"caller,omitempty"`                                    //
	EventData     []byte               `protobuf:"bytes,7,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"`             //
	Function      string               `protobuf:"bytes,8,opt,name=function,proto3" json:"function,omitempty"`                                //
	BlockHeight   uint64               `protobuf:"varint,9,opt,name=block_height,json=blockHeight,proto3" json:"block_height,omitempty"`      //
	Timestamp     *timestamp.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // block timestamp
	BlockHash     string               `protobuf:"bytes,11,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`            //
	TxnHash       string               `protobuf:"bytes,12,opt,name=txn_hash,json=txnHash,proto3" json:"txn_hash,omitempty"`                  //in hex string
	PublicKey     *PublicKey           `protobuf:"bytes,13,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`            // validator public key
	Signature     []byte               `protobuf:"bytes,14,opt,name=signature,proto3" json:"signature,omitempty"`                             // validator signature
}

func (x *SmartContractEventsResponse) Reset() {
	*x = SmartContractEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEventsResponse) ProtoMessage() {}

func (x *SmartContractEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEventsResponse.ProtoReflect.Descriptor instead.
func (*SmartContractEventsResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{25}
}

func (x *SmartContractEventsResponse) GetSmartContract() string {
	if x != nil {
		return x.SmartContract
	}
	return ""
}

func (x *SmartContractEventsResponse) GetInstance() uint64 {
	if x != nil {
		return x.Instance
	}
	return 0
}

func (x *SmartContractEventsResponse) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *SmartContractEventsResponse) GetGasApproved() uint64 {
	if x != nil {
		return x.GasApproved
	}
	return 0
}

func (x *SmartContractEventsResponse) GetStorageFee() string {
	if x != nil {
		return x.StorageFee
	}
	return ""
}

func (x *SmartContractEventsResponse) GetCaller() *PublicKey {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *SmartContractEventsResponse) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *SmartContractEventsResponse) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *SmartContractEventsResponse) GetBlockHeight() uint64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *SmartContractEventsResponse) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SmartContractEventsResponse) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *SmartContractEventsResponse) GetTxnHash() string {
	if x != nil {
		return x.TxnHash
	}
	return ""
}

func (x *SmartContractEventsResponse) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SmartContractEventsResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SmartContractEventsSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SmartContractId string               `protobuf:"bytes,1,opt,name=smart_contract_id,json=smartContractId,proto3" json:"smart_contract_id,omitempty"`
	SearchStart     *timestamp.Timestamp `protobuf:"bytes,2,opt,name=search_start,json=searchStart,proto3" json:"search_start,omitempty"`
}

func (x *SmartContractEventsSearchRequest) Reset() {
	*x = SmartContractEventsSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEventsSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEventsSearchRequest) ProtoMessage() {}

func (x *SmartContractEventsSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEventsSearchRequest.ProtoReflect.Descriptor instead.
func (*SmartContractEventsSearchRequest) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{26}
}

func (x *SmartContractEventsSearchRequest) GetSmartContractId() string {
	if x != nil {
		return x.SmartContractId
	}
	return ""
}

func (x *SmartContractEventsSearchRequest) GetSearchStart() *timestamp.Timestamp {
	if x != nil {
		return x.SearchStart
	}
	return nil
}

type SmartContractEventsSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events    []*SmartContractEventsResponse `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	PublicKey *PublicKey                     `protobuf:"bytes,13,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // validator public key
	Signature []byte                         `protobuf:"bytes,14,opt,name=signature,proto3" json:"signature,omitempty"`                  // validator signature
}

func (x *SmartContractEventsSearchResponse) Reset() {
	*x = SmartContractEventsSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEventsSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEventsSearchResponse) ProtoMessage() {}

func (x *SmartContractEventsSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEventsSearchResponse.ProtoReflect.Descriptor instead.
func (*SmartContractEventsSearchResponse) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{27}
}

func (x *SmartContractEventsSearchResponse) GetEvents() []*SmartContractEventsResponse {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *SmartContractEventsSearchResponse) GetPublicKey() *PublicKey {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

func (x *SmartContractEventsSearchResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type SmartContractEventManagementTemp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventKeys        []string `protobuf:"bytes,1,rep,name=event_keys,json=eventKeys,proto3" json:"event_keys,omitempty"`
	SmartContractIds []string `protobuf:"bytes,2,rep,name=smart_contract_ids,json=smartContractIds,proto3" json:"smart_contract_ids,omitempty"`
}

func (x *SmartContractEventManagementTemp) Reset() {
	*x = SmartContractEventManagementTemp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEventManagementTemp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEventManagementTemp) ProtoMessage() {}

func (x *SmartContractEventManagementTemp) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEventManagementTemp.ProtoReflect.Descriptor instead.
func (*SmartContractEventManagementTemp) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{28}
}

func (x *SmartContractEventManagementTemp) GetEventKeys() []string {
	if x != nil {
		return x.EventKeys
	}
	return nil
}

func (x *SmartContractEventManagementTemp) GetSmartContractIds() []string {
	if x != nil {
		return x.SmartContractIds
	}
	return nil
}

type SmartContractEventManagement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events map[string]*timestamp.Timestamp `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SmartContractEventManagement) Reset() {
	*x = SmartContractEventManagement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractEventManagement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractEventManagement) ProtoMessage() {}

func (x *SmartContractEventManagement) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractEventManagement.ProtoReflect.Descriptor instead.
func (*SmartContractEventManagement) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{29}
}

func (x *SmartContractEventManagement) GetEvents() map[string]*timestamp.Timestamp {
	if x != nil {
		return x.Events
	}
	return nil
}

type SmartContractSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscibers map[string]*Subscriber `protobuf:"bytes,1,rep,name=subscibers,proto3" json:"subscibers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SmartContractSubscription) Reset() {
	*x = SmartContractSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmartContractSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmartContractSubscription) ProtoMessage() {}

func (x *SmartContractSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmartContractSubscription.ProtoReflect.Descriptor instead.
func (*SmartContractSubscription) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{30}
}

func (x *SmartContractSubscription) GetSubscibers() map[string]*Subscriber {
	if x != nil {
		return x.Subscibers
	}
	return nil
}

type Subscriber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level CONFIRMATION_LEVEL `protobuf:"varint,1,opt,name=level,proto3,enum=zera_api.CONFIRMATION_LEVEL" json:"level,omitempty"`
	Host  string             `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	Port  int32              `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *Subscriber) Reset() {
	*x = Subscriber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscriber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscriber) ProtoMessage() {}

func (x *Subscriber) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscriber.ProtoReflect.Descriptor instead.
func (*Subscriber) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{31}
}

func (x *Subscriber) GetLevel() CONFIRMATION_LEVEL {
	if x != nil {
		return x.Level
	}
	return CONFIRMATION_LEVEL_PROCESSED
}

func (x *Subscriber) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *Subscriber) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type WalletChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletAddress []byte   `protobuf:"bytes,1,opt,name=wallet_address,json=walletAddress,proto3" json:"wallet_address,omitempty"`
	ContractIds   []string `protobuf:"bytes,2,rep,name=contract_ids,json=contractIds,proto3" json:"contract_ids,omitempty"`
	OldBalances   []string `protobuf:"bytes,3,rep,name=old_balances,json=oldBalances,proto3" json:"old_balances,omitempty"`
	NewBalances   []string `protobuf:"bytes,4,rep,name=new_balances,json=newBalances,proto3" json:"new_balances,omitempty"`
}

func (x *WalletChange) Reset() {
	*x = WalletChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_zera_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletChange) ProtoMessage() {}

func (x *WalletChange) ProtoReflect() protoreflect.Message {
	mi := &file_zera_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletChange.ProtoReflect.Descriptor instead.
func (*WalletChange) Descriptor() ([]byte, []int) {
	return file_zera_api_proto_rawDescGZIP(), []int{32}
}

func (x *WalletChange) GetWalletAddress() []byte {
	if x != nil {
		return x.WalletAddress
	}
	return nil
}

func (x *WalletChange) GetContractIds() []string {
	if x != nil {
		return x.ContractIds
	}
	return nil
}

func (x *WalletChange) GetOldBalances() []string {
	if x != nil {
		return x.OldBalances
	}
	return nil
}

func (x *WalletChange) GetNewBalances() []string {
	if x != nil {
		return x.NewBalances
	}
	return nil
}

var File_zera_api_proto protoreflect.FileDescriptor

var file_zera_api_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x74, 0x78, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x56, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x7a, 0x65,
	0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xf6, 0x02, 0x0a,
	0x16, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x64, 0x67, 0x65,
	0x72, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0b, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x79, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x22, 0x3c, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0x4f,
	0x0a, 0x0c, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x22,
	0x25, 0x0a, 0x0d, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x72, 0x0a, 0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22,
	0x32, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x49, 0x64, 0x22, 0xd8, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x72,
	0x61, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x35,
	0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a,
	0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f,
	0x74, 0x78, 0x6e, 0x2e, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x46, 0x45, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x46,
	0x65, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x65, 0x65, 0x22, 0x8f,
	0x01, 0x0a, 0x0e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x78, 0x6e,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x78,
	0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x7a,
	0x65, 0x72, 0x61, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79,
	0x22, 0x45, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x79, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x79, 0x74, 0x65, 0x46, 0x65, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x0c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x66, 0x65,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f,
	0x74, 0x78, 0x6e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x65, 0x65, 0x73,
	0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x65, 0x65, 0x73,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x66, 0x65, 0x65, 0x73, 0x22, 0x38, 0x0a, 0x13, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x46, 0x0a, 0x14, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x40, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x0b, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x0c, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f,
	0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x36, 0x0a, 0x13, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x44, 0x65, 0x6e, 0x6f, 0x6d,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x50, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x10, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xbb, 0x02, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x72,
	0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61,
	0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x90, 0x04,
	0x0a, 0x1b, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x67,
	0x61, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0b, 0x67, 0x61, 0x73, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x46, 0x65, 0x65, 0x12,
	0x2b, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x4b, 0x65, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x78, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x78, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32,
	0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x8d, 0x01, 0x0a, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x22, 0xb4, 0x01, 0x0a, 0x21, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x7a, 0x65, 0x72, 0x61,
	0x5f, 0x74, 0x78, 0x6e, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x6f, 0x0a, 0x20, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x73, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22, 0xc1, 0x01, 0x0a, 0x1c, 0x53, 0x6d, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x4a, 0x0a, 0x06, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x7a, 0x65, 0x72, 0x61,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x55, 0x0a, 0x0b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc5, 0x01, 0x0a,
	0x19, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x53, 0x0a, 0x0a, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x69, 0x62, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x69, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x69, 0x62, 0x65, 0x72, 0x73, 0x1a,
	0x53, 0x0a, 0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x69, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x68, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x56, 0x45, 0x4c, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x9e,
	0x01, 0x0a, 0x0c, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x6e, 0x65, 0x77, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2a,
	0x41, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4c, 0x45, 0x56, 0x45, 0x4c, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45, 0x44,
	0x10, 0x02, 0x2a, 0xc5, 0x02, 0x0a, 0x0d, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x53, 0x10, 0x01,
	0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x41, 0x53, 0x48, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x02,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x53, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x53, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x4c,
	0x4f, 0x43, 0x4b, 0x53, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x53, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x53, 0x10, 0x08, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43,
	0x54, 0x5f, 0x49, 0x54, 0x45, 0x4d, 0x53, 0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x42, 0x4f, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x4c,
	0x45, 0x44, 0x47, 0x45, 0x52, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x50, 0x4f,
	0x53, 0x41, 0x4c, 0x53, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e,
	0x43, 0x59, 0x5f, 0x45, 0x51, 0x55, 0x49, 0x56, 0x41, 0x4c, 0x45, 0x4e, 0x54, 0x53, 0x10, 0x0d,
	0x12, 0x11, 0x0a, 0x0d, 0x45, 0x58, 0x50, 0x45, 0x4e, 0x53, 0x45, 0x5f, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x10, 0x0e, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x54, 0x54, 0x45, 0x53, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x52, 0x4d, 0x45,
	0x44, 0x5f, 0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x53, 0x10, 0x10, 0x2a, 0x59, 0x0a, 0x0d, 0x50, 0x52,
	0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x11, 0x0a, 0x0d, 0x41,
	0x4c, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x53, 0x10, 0x00, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x4c, 0x4c, 0x5f, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52, 0x53, 0x10, 0x01, 0x12,
	0x12, 0x0a, 0x0e, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x41, 0x4c, 0x5f, 0x42, 0x59, 0x5f, 0x49,
	0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x52, 0x5f, 0x42, 0x59,
	0x5f, 0x49, 0x44, 0x10, 0x03, 0x32, 0x9f, 0x08, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x18, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x7a, 0x65, 0x72, 0x61,
	0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x2e,
	0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x4e, 0x6f, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a,
	0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1c, 0x2e,
	0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x7a, 0x65,
	0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x07, 0x42, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x18, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x46,
	0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x2e,
	0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x7a,
	0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x65, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05,
	0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x7a,
	0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0c, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e,
	0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x19, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x7a, 0x65, 0x72,
	0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x16, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61,
	0x70, 0x69, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x53, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x12, 0x1f, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x1c, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x54, 0x0a, 0x13, 0x53, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x25, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41,
	0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x19, 0x2e, 0x7a, 0x65, 0x72,
	0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x74, 0x0a, 0x19, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x2a,
	0x2e, 0x7a, 0x65, 0x72, 0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x7a, 0x65, 0x72,
	0x61, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x6d, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x13, 0x48, 0x01, 0x5a, 0x0f, 0x2e, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_zera_api_proto_rawDescOnce sync.Once
	file_zera_api_proto_rawDescData = file_zera_api_proto_rawDesc
)

func file_zera_api_proto_rawDescGZIP() []byte {
	file_zera_api_proto_rawDescOnce.Do(func() {
		file_zera_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_zera_api_proto_rawDescData)
	})
	return file_zera_api_proto_rawDescData
}

var file_zera_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_zera_api_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_zera_api_proto_goTypes = []interface{}{
	(CONFIRMATION_LEVEL)(0),                   // 0: zera_api.CONFIRMATION_LEVEL
	(DATABASE_TYPE)(0),                        // 1: zera_api.DATABASE_TYPE
	(PROPOSAL_TYPE)(0),                        // 2: zera_api.PROPOSAL_TYPE
	(*ProposalLedgerRequest)(nil),             // 3: zera_api.ProposalLedgerRequest
	(*ProposalLedgerResponse)(nil),            // 4: zera_api.ProposalLedgerResponse
	(*BlockRequest)(nil),                      // 5: zera_api.BlockRequest
	(*BlockResponse)(nil),                     // 6: zera_api.BlockResponse
	(*NonceRequest)(nil),                      // 7: zera_api.NonceRequest
	(*NonceResponse)(nil),                     // 8: zera_api.NonceResponse
	(*BalanceRequest)(nil),                    // 9: zera_api.BalanceRequest
	(*BalanceResponse)(nil),                   // 10: zera_api.BalanceResponse
	(*ContractRequest)(nil),                   // 11: zera_api.ContractRequest
	(*ContractResponse)(nil),                  // 12: zera_api.ContractResponse
	(*ContractFeeRequest)(nil),                // 13: zera_api.ContractFeeRequest
	(*ContractFeeResponse)(nil),               // 14: zera_api.ContractFeeResponse
	(*BaseFeeRequest)(nil),                    // 15: zera_api.BaseFeeRequest
	(*BaseFeeResponse)(nil),                   // 16: zera_api.BaseFeeResponse
	(*TokenFeeInfo)(nil),                      // 17: zera_api.TokenFeeInfo
	(*TokenFeeInfoRequest)(nil),               // 18: zera_api.TokenFeeInfoRequest
	(*TokenFeeInfoResponse)(nil),              // 19: zera_api.TokenFeeInfoResponse
	(*Item)(nil),                              // 20: zera_api.Item
	(*ItemRequest)(nil),                       // 21: zera_api.ItemRequest
	(*ItemResponse)(nil),                      // 22: zera_api.ItemResponse
	(*DenominationRequest)(nil),               // 23: zera_api.DenominationRequest
	(*DenominationResponse)(nil),              // 24: zera_api.DenominationResponse
	(*DatabaseRequest)(nil),                   // 25: zera_api.DatabaseRequest
	(*DatabaseResponse)(nil),                  // 26: zera_api.DatabaseResponse
	(*ActivityRequest)(nil),                   // 27: zera_api.ActivityRequest
	(*SmartContractEventsResponse)(nil),       // 28: zera_api.SmartContractEventsResponse
	(*SmartContractEventsSearchRequest)(nil),  // 29: zera_api.SmartContractEventsSearchRequest
	(*SmartContractEventsSearchResponse)(nil), // 30: zera_api.SmartContractEventsSearchResponse
	(*SmartContractEventManagementTemp)(nil),  // 31: zera_api.SmartContractEventManagementTemp
	(*SmartContractEventManagement)(nil),      // 32: zera_api.SmartContractEventManagement
	(*SmartContractSubscription)(nil),         // 33: zera_api.SmartContractSubscription
	(*Subscriber)(nil),                        // 34: zera_api.Subscriber
	(*WalletChange)(nil),                      // 35: zera_api.WalletChange
	nil,                                       // 36: zera_api.SmartContractEventManagement.EventsEntry
	nil,                                       // 37: zera_api.SmartContractSubscription.SubscibersEntry
	(*Block)(nil),                             // 38: zera_validator.Block
	(*InstrumentContract)(nil),                // 39: zera_txn.InstrumentContract
	(*timestamp.Timestamp)(nil),               // 40: google.protobuf.Timestamp
	(*PublicKey)(nil),                         // 41: zera_txn.PublicKey
	(CONTRACT_FEE_TYPE)(0),                    // 42: zera_txn.CONTRACT_FEE_TYPE
	(TRANSACTION_TYPE)(0),                     // 43: zera_txn.TRANSACTION_TYPE
	(*ContractFees)(nil),                      // 44: zera_txn.ContractFees
	(*empty.Empty)(nil),                       // 45: google.protobuf.Empty
}
var file_zera_api_proto_depIdxs = []int32{
	1,  // 0: zera_api.ProposalLedgerRequest.type:type_name -> zera_api.DATABASE_TYPE
	38, // 1: zera_api.BlockResponse.block:type_name -> zera_validator.Block
	39, // 2: zera_api.ContractResponse.contract:type_name -> zera_txn.InstrumentContract
	40, // 3: zera_api.ContractResponse.timestamp:type_name -> google.protobuf.Timestamp
	41, // 4: zera_api.ContractResponse.public_key:type_name -> zera_txn.PublicKey
	42, // 5: zera_api.ContractFeeResponse.contract_fee_type:type_name -> zera_txn.CONTRACT_FEE_TYPE
	41, // 6: zera_api.BaseFeeRequest.public_key:type_name -> zera_txn.PublicKey
	43, // 7: zera_api.BaseFeeRequest.txn_type:type_name -> zera_txn.TRANSACTION_TYPE
	44, // 8: zera_api.TokenFeeInfo.contract_fees:type_name -> zera_txn.ContractFees
	17, // 9: zera_api.TokenFeeInfoResponse.tokens:type_name -> zera_api.TokenFeeInfo
	20, // 10: zera_api.ItemResponse.items:type_name -> zera_api.Item
	1,  // 11: zera_api.DatabaseRequest.type:type_name -> zera_api.DATABASE_TYPE
	0,  // 12: zera_api.ActivityRequest.level:type_name -> zera_api.CONFIRMATION_LEVEL
	41, // 13: zera_api.ActivityRequest.public_key:type_name -> zera_txn.PublicKey
	41, // 14: zera_api.SmartContractEventsResponse.caller:type_name -> zera_txn.PublicKey
	40, // 15: zera_api.SmartContractEventsResponse.timestamp:type_name -> google.protobuf.Timestamp
	41, // 16: zera_api.SmartContractEventsResponse.public_key:type_name -> zera_txn.PublicKey
	40, // 17: zera_api.SmartContractEventsSearchRequest.search_start:type_name -> google.protobuf.Timestamp
	28, // 18: zera_api.SmartContractEventsSearchResponse.events:type_name -> zera_api.SmartContractEventsResponse
	41, // 19: zera_api.SmartContractEventsSearchResponse.public_key:type_name -> zera_txn.PublicKey
	36, // 20: zera_api.SmartContractEventManagement.events:type_name -> zera_api.SmartContractEventManagement.EventsEntry
	37, // 21: zera_api.SmartContractSubscription.subscibers:type_name -> zera_api.SmartContractSubscription.SubscibersEntry
	0,  // 22: zera_api.Subscriber.level:type_name -> zera_api.CONFIRMATION_LEVEL
	40, // 23: zera_api.SmartContractEventManagement.EventsEntry.value:type_name -> google.protobuf.Timestamp
	34, // 24: zera_api.SmartContractSubscription.SubscibersEntry.value:type_name -> zera_api.Subscriber
	9,  // 25: zera_api.APIService.Balance:input_type -> zera_api.BalanceRequest
	7,  // 26: zera_api.APIService.Nonce:input_type -> zera_api.NonceRequest
	13, // 27: zera_api.APIService.ContractFee:input_type -> zera_api.ContractFeeRequest
	15, // 28: zera_api.APIService.BaseFee:input_type -> zera_api.BaseFeeRequest
	18, // 29: zera_api.APIService.GetTokenFeeInfo:input_type -> zera_api.TokenFeeInfoRequest
	21, // 30: zera_api.APIService.Items:input_type -> zera_api.ItemRequest
	23, // 31: zera_api.APIService.Denomination:input_type -> zera_api.DenominationRequest
	25, // 32: zera_api.APIService.Database:input_type -> zera_api.DatabaseRequest
	5,  // 33: zera_api.APIService.Block:input_type -> zera_api.BlockRequest
	3,  // 34: zera_api.APIService.ProposalLedger:input_type -> zera_api.ProposalLedgerRequest
	27, // 35: zera_api.APIService.SmartContractActivityRequest:input_type -> zera_api.ActivityRequest
	28, // 36: zera_api.APIService.SmartContractEvents:input_type -> zera_api.SmartContractEventsResponse
	11, // 37: zera_api.APIService.Contract:input_type -> zera_api.ContractRequest
	29, // 38: zera_api.APIService.SmartContractEventsSearch:input_type -> zera_api.SmartContractEventsSearchRequest
	10, // 39: zera_api.APIService.Balance:output_type -> zera_api.BalanceResponse
	8,  // 40: zera_api.APIService.Nonce:output_type -> zera_api.NonceResponse
	14, // 41: zera_api.APIService.ContractFee:output_type -> zera_api.ContractFeeResponse
	16, // 42: zera_api.APIService.BaseFee:output_type -> zera_api.BaseFeeResponse
	19, // 43: zera_api.APIService.GetTokenFeeInfo:output_type -> zera_api.TokenFeeInfoResponse
	22, // 44: zera_api.APIService.Items:output_type -> zera_api.ItemResponse
	24, // 45: zera_api.APIService.Denomination:output_type -> zera_api.DenominationResponse
	26, // 46: zera_api.APIService.Database:output_type -> zera_api.DatabaseResponse
	6,  // 47: zera_api.APIService.Block:output_type -> zera_api.BlockResponse
	4,  // 48: zera_api.APIService.ProposalLedger:output_type -> zera_api.ProposalLedgerResponse
	45, // 49: zera_api.APIService.SmartContractActivityRequest:output_type -> google.protobuf.Empty
	45, // 50: zera_api.APIService.SmartContractEvents:output_type -> google.protobuf.Empty
	12, // 51: zera_api.APIService.Contract:output_type -> zera_api.ContractResponse
	30, // 52: zera_api.APIService.SmartContractEventsSearch:output_type -> zera_api.SmartContractEventsSearchResponse
	39, // [39:53] is the sub-list for method output_type
	25, // [25:39] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_zera_api_proto_init() }
func file_zera_api_proto_init() {
	if File_zera_api_proto != nil {
		return
	}
	file_txn_proto_init()
	file_validator_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_zera_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalLedgerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalLedgerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFeeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseFeeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenFeeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenFeeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenFeeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenominationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DenominationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatabaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEventsSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEventsSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEventManagementTemp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractEventManagement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmartContractSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscriber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_zera_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_zera_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BlockRequest_BlockHeight)(nil),
		(*BlockRequest_BlockHash)(nil),
	}
	file_zera_api_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_zera_api_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_zera_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_zera_api_proto_goTypes,
		DependencyIndexes: file_zera_api_proto_depIdxs,
		EnumInfos:         file_zera_api_proto_enumTypes,
		MessageInfos:      file_zera_api_proto_msgTypes,
	}.Build()
	File_zera_api_proto = out.File
	file_zera_api_proto_rawDesc = nil
	file_zera_api_proto_goTypes = nil
	file_zera_api_proto_depIdxs = nil
}
